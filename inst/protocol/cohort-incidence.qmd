---
output: html_document
---
  
## Cohort Incidence

### Overview

A total of ``r do.call(sum, lapply(CohortIncidenceModuleSettings$settings$irDesign$analysisList, function(x){length(x[[1]])*length(x[[2]])*length(x[[3]])}))`` incidence rates will be developed across ``r length(CohortIncidenceModuleSettings$settings$irDesign$analysisList)`` different analyses.

```{r, echo=FALSE, results = 'asis'}

  tarDefs <- CohortIncidenceModuleSettings$settings$irDesign$timeAtRiskDefs
getTarString <- function(tarDefs, tarId){
    res <- tarDefs[[which(unlist(lapply(tarDefs, function(x) x$id)) == tarId)]]
    
    return(paste0('(',res$start$dateField ,' + ', res$start$offset, ') - (', res$end$dateField, ' + ', res$end$offset, ')'))
}

for(i in 1:length(CohortIncidenceModuleSettings$settings$irDesign$analysisList)){

  targetIds <- CohortIncidenceModuleSettings$settings$irDesign$analysisList[[i]]$targets
  #updated for new CI
  targetIds <- unlist(lapply(targetIds, function(id) CohortIncidenceModuleSettings$settings$irDesign$targetDefs[[id]]$id))
  
  
  # this is now the ci cohort ids not the main cohort ids
  outcomeIdsCI <- CohortIncidenceModuleSettings$settings$irDesign$analysisList[[i]]$outcomes
  # create lookup to find outcome ids
  outcomeLookup <- as.data.frame(
    do.call(
      rbind, 
      CohortIncidenceModuleSettings$settings$irDesign$outcomeDefs)
    )
  outcomeIds <- outcomeLookup$cohortId[outcomeLookup$id %in% outcomeIdsCI]
  
  targets = sapply(
    targetIds, 
    function(x){
      paste0(cohortNames[x==cohortIds], '(see @sec-',which(x==cohortIds), ')')
    }
  )
  outcomes = sapply(
    outcomeIds, 
        function(x){
      paste0(cohortNames[x==cohortIds], '(see @sec-',which(x==cohortIds), ')')
    }
    )
  
  tars <- CohortIncidenceModuleSettings$settings$irDesign$analysisList[[i]]$tars
  
  cat(
    paste0(
      "\n### Analysis ", i, "{#sec-incidence-analysis-",
      ifelse(i != length(CohortIncidenceModuleSettings$settings$irDesign$analysisList), i, 'end'),
      "} \n")
    )

  cat("\n#### Targets ",
      paste0(' - ',paste0(targets , collapse=' \n - ')), 
      sep= '\n'
  )
  
  cat("\n#### Outcomes \n",
      paste0(' - ',paste0(outcomes , collapse=' \n - ')), 
      sep= '\n'
  )
  
  cat("\n#### Time-at-risks (TARs) \n",
      paste0(' - ',paste0(sapply(tars, function(x){getTarString(tarDefs, x)}) , collapse=' \n - ')), 
      sep= '\n'
  )
}
  
   cat("\n### Stratification \n", sep ='\n')
   
   strataTable <- getSettingsTable(
  package = 'CohortIncidence', 
  functionName = 'createStrataSettings',
  #settings = CohortIncidenceModuleSettings$settings$irDesign$strataSettings
  settings = as.list(sapply(CohortIncidenceModuleSettings$settings$irDesign$strataSettings, function(x) paste(x, sep = ',', collapse = ','))) 
)

      reportTableFormat(
      table = strataTable, 
      groupBy = 'input',
      columns = defaultColumns(strataTable),
      caption = 'Stratification settings'
      )

      
  
```

